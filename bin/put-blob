#!/usr/bin/env node

var program = require('commander');
var path = require('path');

program
  .version(require(__dirname + '/../package.json').version)
  .usage('[options] <file ...>')
  .option('-a, --account <account>',   'Azure Storage Account')
  .option('-k, --accesskey <accesskey>', 'Azure Storage Access Key')
  .option('-c, --container <container>', 'Storage Container')
  .option('-f, --from [none]', "From other blob")
  .parse(process.argv);


// console.log(program);

var file = process.argv.slice(-1)[0];

process.env['AZURE_STORAGE_ACCOUNT']    = program.account;
process.env['AZURE_STORAGE_ACCESS_KEY'] = program.accesskey;

var azure       = require('azure');
var blobService = azure.createBlobService();

function showErrorAndExit(error) {
  console.log(error);
  return process.exit(1);
}

blobService.createContainerIfNotExists(program.container, { publicAccessLevel : 'blob' }, function(error){
  if(error) return showErrorAndExit(error);
  console.log('uploading', file);
  
  if (program.from) {
    var blobUrl  = blobService.getBlobUrl(program.container, program.from);

    return blobService.copyBlob(blobUrl, program.container, file, function(error){
      if(error) return showErrorAndExit(error);
      
      console.log('uploaded!');
      
      process.exit(0);

    });
  }

  blobService.createBlockBlobFromFile(program.container, path.basename(file), file, function(error){
    if(error) return showErrorAndExit(error);
    
    console.log('uploaded!');
    
    process.exit(0);

  });
});