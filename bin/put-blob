#!/usr/bin/env node
require('colors');

var program = require('commander');
var ProgressBar = require('progress');
var upload = require('../lib/upload');

program
  .version(require(__dirname + '/../package.json').version)
  .usage('[options] <file ...>')
  .option('-a, --account <account>',     'Azure Storage Account')
  .option('-k, --accesskey <accesskey>', 'Azure Storage Access Key')
  .option('-c, --container <container>', 'Storage Container')
  .option('-z, --chunksize <4>',         'Optional chunk size in megabytes (default to 4mb)', parseFloat, 4)
  .option('-r, --retry <3>',             'Attempts before giving up', parseInt, 3)
  .option('-f, --from [none]',           'From other blob')
  .option('-q, --quiet')
  .parse(process.argv);

program.file_to_upload = process.argv.slice(-1)[0];

process.env['AZURE_STORAGE_ACCOUNT']    = process.env['AZURE_STORAGE_ACCOUNT'] || program.account || '';
process.env['AZURE_STORAGE_ACCESS_KEY'] = process.env['AZURE_STORAGE_ACCESS_KEY'] || program.accesskey || '';



if (!process.env['AZURE_STORAGE_ACCOUNT']) {
  console.error('account is required'.red);
  program.outputHelp();
  return;
}

if (!process.env['AZURE_STORAGE_ACCESS_KEY']) {
  console.error('access key is required'.red);
  program.outputHelp();
  return;
}


function showErrorAndExit(error) {
  console.log(error);
  return process.exit(1);
}

var attempts = 0;

function try_upload() {
  var proc = upload(program);
  var pb;
  proc.on('starting', function(chunks) {
      pb = new ProgressBar('  uploading [:bar] :percent :etas', { total: chunks , width: 20 });
    }).on('chunk send', function () {
      pb.tick();
    }).on('error', function (err) {
      attempts++;
      console.error(('Got error: ' + (err.message || err.html.BODY.h2) + ', attempt: ' + attempts).red);
      if (attempts > program.retry) {
        return process.exit(1);
      }
      try_upload();
    }).on('end', function () {
      process.exit(0);
    });
}

try_upload();